<?xml version="1.0" encoding="UTF-8"?>

<project name="tmh-web" default="build" basedir=".">
    <property name="version" value="1.0.0"/>

    <target name="build-clean"
            depends="clean,build-common" />

    <target name="build-clean-unittest"
        depends="clean,build-common-unittest" />

    <target name="build-clean-no-unit"
        depends="clean,build-common-no-unit" />        

    <target name="clean" depends="clean-build" description="Cleanup build and composer artifacts" />

    <target name="build-common-unittest" depends="phpunit-coverage" />

    <target name="clean-build" description="Cleanup build artifacts">
        <echo>Cleaning out the build artifacts</echo>
        <delete dir="${basedir}/build/api" />
        <delete dir="${basedir}/build/code-browser" />
        <delete dir="${basedir}/build/coverage" />
        <delete dir="${basedir}/build/logs" />
        <delete dir="${basedir}/build/pdepend" />
		<delete dir="${basedir}/target" />
    </target>

    <target name="build-common" depends="prepare,storage-permissions,phpunit,buildinfo" />

    <target name="build-common-no-unit" depends="prepare,vendors,storage-permissions,buildinfo" />

    <target name="prepare" depends="clean-build" description="Prepare for build">
        <echo>Making the build artifact folders</echo>
        <mkdir dir="${basedir}/build/api" />
        <mkdir dir="${basedir}/build/code-browser" />
        <mkdir dir="${basedir}/build/coverage" />
        <mkdir dir="${basedir}/build/logs" />
        <mkdir dir="${basedir}/build/pdepend" />
		<mkdir dir="${basedir}/target" />
    </target>

    <target name="storage-permissions" 
            depends="storage-permissions.unix,storage-permissions.windows" 
            description="Setting storage permissions" />

    <target name="storage-permissions.unix" depends="storage.unix.check" if="storage.unix.exist" description="Setting storage permissions on unix">
        <echo>Setting src/storage to 777</echo>
        <chmod file="${basedir}/src/storage/**" perm="777" type="dir" failonerror="false" />
    </target>

    <target name="storage-permissions.windows" depends="storage.windows.check" if="storage.windows.exist" description="Setting storage permissions on windows">
        <echo>Setting src/storage to writable</echo>
        <attrib file="${basedir}/src/storage/**" perm="+R" failonerror="false" />
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="./vendor/bin/paratest" failonerror="true">
            <arg value="-p 4" />
            <arg value="-c" />
            <arg value="${basedir}/phpunit-dev.xml" />
            <arg value="--testsuite" />
            <arg value="Unit" />
        </exec>
    </target>

    <target name="phpunit-coverage" description="Run unit tests with PHPUnit">
        <exec executable="${basedir}/src/vendor/bin/phpunit" failonerror="true">
            <arg value="-c" />
            <arg value="${basedir}/src/phpunit.xml" />
            <arg value="--coverage-html" />
            <arg value="${basedir}/src/build/coverage" />
            <arg value="--coverage-clover" />
            <arg value="${basedir}/src/build/logs/clover.xml" />
            <arg value="--testsuite" />
            <arg value="Unit" />
        </exec>
    </target>

    <target name="buildinfo">
		<propertyfile file="${basedir}/target/BuildInfo.txt"
                      comment="This file is automatically generated - DO NOT EDIT">
                        <entry key="ProjectName" value="${app_projectname}"/>
						<entry key="Version" value="${version}"/>
                        <entry key="BuildVersion" value="${version}-${build_number}"/>
						<entry key="GitURL" value="${git_url}"/>
                        <entry key="HashCode" value="${hash_commit}"/>
						<entry key="AppWebPath" value="${app_web_path}"/>
						<entry key="AppUser" value="${app_user}"/>
						<entry key="AppGitBranch" value="${app_git_branch}"/>
                        <entry key="GitMsg" value="${git_msg}"/>
                        <entry key="GitCommitUser" value="${git_commit_user}"/>
        </propertyfile>
    </target>

    <!--// Check to see it the src/storage folder exist, if so, then can change permissions //-->
    <target name="storage.unix.check" description="Check for src/storage on unix">
        <condition property="storage.unix.exist">
            <and>
                <available file="${basedir}/src/storage" type="dir" />
                <os family="unix" />
            </and>
        </condition>
    </target>

    <!--// Check to see it the src/storage folder exist, if so, then can change permissions //-->
    <target name="storage.windows.check" description="Check for src/storage on windows">
        <condition property="storage.windows.exist">
            <and>
                <available file="${basedir}/src/storage" type="dir" />
                <os family="windows" />
            </and>
        </condition>
    </target>

    <target name="vendors" description="Install composer dependencies">
        <exec dir="${basedir}/src" executable="/usr/local/bin/composer" failonerror="true">
            <arg value="install" />
            <arg value="--no-interaction" />
            <arg value="--no-progress" />
            <arg value="--prefer-dist" />
        </exec>
    </target>

</project>
